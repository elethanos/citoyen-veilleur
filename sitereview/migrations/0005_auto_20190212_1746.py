# Generated by Django 2.1.1 on 2019-02-12 17:46

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sitereview', '0004_auto_20181219_1732'),
    ]

    operations = [
        migrations.CreateModel(
            name='ParamUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('ban', models.BooleanField(default=False)),
                ('deleted', models.BooleanField(default=False)),
                ('trust', models.BooleanField(default=False)),
                ('intern_remark', models.TextField(default='')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.IntegerField(default=1, validators=[django.core.validators.MaxValueValidator(5), django.core.validators.MinValueValidator(0)])),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.RemoveField(
            model_name='choice',
            name='question',
        ),
        migrations.AddField(
            model_name='website_alert',
            name='anitisem_france',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='antisem_abroad',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='antisionisme_abroad',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='antisionisme_france',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='article',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='bad_user',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='comments',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='creator',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='creator', to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='website_alert',
            name='extern_pseudo',
            field=models.CharField(default='', max_length=200),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='hour_video',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='legal_proceeding',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='main_quotes',
            field=models.TextField(default=''),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='minute_video',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='official_hater_website',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='only_alert',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='regular_website',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='second_video',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='social_network',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='video',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='website_alert',
            name='deleted',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='website_alert',
            name='remark',
            field=models.TextField(default=''),
        ),
        migrations.AlterField(
            model_name='website_alert',
            name='site_closed',
            field=models.BooleanField(default=False),
        ),
        migrations.AlterField(
            model_name='website_alert',
            name='verify',
            field=models.BooleanField(default=False),
        ),
        migrations.DeleteModel(
            name='Choice',
        ),
        migrations.DeleteModel(
            name='Question',
        ),
        migrations.AddField(
            model_name='vote',
            name='website_alert',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='sitereview.Website_alert'),
        ),
        migrations.AddField(
            model_name='website_alert',
            name='voted_by',
            field=models.ManyToManyField(related_name='voted_by', through='sitereview.Vote', to=settings.AUTH_USER_MODEL),
        ),
    ]
